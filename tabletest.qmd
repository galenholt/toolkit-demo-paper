---
title: "HydroBOT: an integrated toolkit for assessment of hydrology-dependent outcomes"
author: 
 - name: Galen Holt
   orcid: 0000-0002-7455-9275
   corresponding: true
   email: galen@deakin.edu.au
   affiliation:
    - ref: du
 - name: Georgia Dwyer
   orcid: 0000-0002-3579-3819
   corresponding: false
   affiliations:
     - ref: du
 - name: David Robertson
   orcid: 0000-0003-4230-8006
   corresponding: false
   affiliations:
     - CSIRO
 - name: Martin Job
   orcid: 
   corresponding: false
   affiliations:
     - MDBA
 - name: Rebecca E Lester
   orcid: 
   corresponding: false
   affiliations:
     - ref: du

affiliations:
  - id: du
    name: Deakin University
    city: Waurn Ponds
    state: Victoria
        
keywords: 
 - Murray-Darling Basin
 - Holistic modeling
 - Management modeling
 - Climate change
 - Climate adaptation
 
date: last-modified

bibliography: references.bib
csl: ../ecology.csl

number-sections: true

echo: false

crossref:
  custom:
    - kind: float
      key: suppfig
      latex-env: suppfig
      reference-prefix: Figure S
      space-before-numbering: false
    - kind: float
      key: supptbl
      latex-env: supptbl
      reference-prefix: Table S
      space-before-numbering: false
      caption-location: top

format:
  html:
    embed-resources: true
    toc: true
    comments:
      hypothesis: true
  docx:
    toc: false
    prefer-html: true
    # 7 and 5 are html defaults and look better, but 6.3 is 16cm and so full-page width in word and usually submissions
    fig-width: 6.2 # 7
    fig-height: 4.5 # 5
    fig-dpi: 300
    reference-doc: ../default_word_template.docx
---

## Tables

```{r}
library(HydroBOT)
library(dplyr)
library(flextable)
```

```{r}
set_flextable_defaults(font.family = 'Calibri',
                       font.size = 10,
                       table.layout = 'autofit')
```

```{r}
demo_webdir <- file.path('~', '../Deakin University/QAEL - WERP in house - WERP/Toolkit/Writing/Demonstration paper')

project_dir = file.path(demo_webdir, 'demo_scenarios')  # '..', 
# Hydrographs
hydro_dir = file.path(project_dir, 'hydrographs') 

gauges_to_plot <- c('412002', '419001')
```

test glossary

```{r}
#| message: false
gloss_tab <- readr::read_csv(file.path(demo_webdir, "definitions.csv"), show_col_types = FALSE)|>
  dplyr::filter(!is.na(Definition))

# Both huxtable and knitr are bad for word export. Probably will just have to save CSVs for submission

flextable(gloss_tab)
# if (knitr::is_html_output()) {
  # knitr::kable(gloss_tab)
# } else {
#   huxtable::huxtable(gloss_tab) |> theme_article()
# }
```

Comp

```{r}

comp_tab <- readr::read_csv(here::here('presentation_paper/component_table.csv'), show_col_types = FALSE)

# Both huxtable and knitr are bad for word export. Probably will just have to save CSVs for submission

comp_tab |> 
  # Too much text in the last col
  dplyr::select(-last_col()) |> 
  flextable()
```

COMP in div- FOR TESTING

::: {#supptbl-components}
```{r}

comp_tab <- readr::read_csv(here::here('presentation_paper/component_table.csv'), show_col_types = FALSE)

comp_tab |> 
  # Too much text in the last col
  dplyr::select(-last_col()) |> 
  flextable() |> 
  font(fontname = 'Calibri') |> 
  fontsize(size = 10, part = 'all') |> 
  set_table_properties(layout = 'autofit', width = 1)
```

Components of HydroBOT architecture. Input data is included here to discuss its properties, but is not part of the architecture proper, which consists of three workflow components and three integrated external components.
:::

EWRs

```{r}
ewrs_in_pyewr <- get_ewr_table() |> 
  rename(gauge = Gauge)

ewr_tab <- ewrs_in_pyewr |>
  dplyr::filter(gauge %in% gauges_to_plot[2]) |>
  dplyr::mutate(maxinter = signif(as.numeric(`MaxInter-event`), 1)) |> 
  # Why these? Same as Georgia had
  dplyr::select(Code,
                `Start month` = StartMonth, 
                `End month` = EndMonth,
                `Target freq. (%)` = TargetFrequency,
                `Max freq. (%)` = TargetFrequencyMax,
                `Events per year` = EventsPerYear,
                `Days per year` = Duration,
                `Consecutive days` = MinSpell,
                `Min flow (ML/d)` = FlowThresholdMin,
                `Max flow (ML/d)` = FlowThresholdMax,
                `Max inter-event` = maxinter)

ewr_tab |> 
    flextable() |> 
  align(align = 'right')
```

Scenarios

```{r}
scenarios <- yaml::read_yaml(file.path(hydro_dir,                                     
                                       'scenario_metadata.yml'))

scenarios <- scenarios |>  
  tibble::as_tibble() |> 
  dplyr::rename('scenario' = "scenario_name")

# Add Georgia's scenario codes
scenarios <- scenarios |> 
  arrange(flow_addition, flow_multiplier) |> 
  group_by(flow_addition) |>
  mutate(climate_code = LETTERS[1:n()]) |>
  ungroup() |> 
  group_by(flow_multiplier) |> 
  mutate(adapt_code = 1:n()) |> 
  ungroup()

```

```{r}
adapt_scenes <- scenarios |> 
  filter(scenario != 'MAX') |> 
  mutate(flow_addition = as.integer(flow_addition)) |> 
  select(`Adaptation code` = adapt_code,
         `Flow addition (ML/d)` = flow_addition) |>
  distinct()

climate_scenes <- scenarios |> 
  filter(scenario != 'MAX') |> 
  select(`Climate code` = climate_code,
         `Flow multiplier` = flow_multiplier) |>
  distinct()

adapt_scenes <- adapt_scenes |> 
  bind_rows(tibble(`Adaptation code` = rep(NA, nrow(climate_scenes) - nrow(adapt_scenes)),
       `Flow addition (ML/d)` = rep(NA, nrow(climate_scenes) - nrow(adapt_scenes))))

climate_scenes |> 
               mutate(`Flow multiplier` = signif(`Flow multiplier`, 2)) |> 
  bind_cols(adapt_scenes) |> 
  flextable() |> 
  vline(j = 2)

#adapt_scenes |> flextable()

```
